// <auto-generated />
using ClickNCheck.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClickNCheck.Migrations
{
    [DbContext(typeof(ClickNCheckContext))]
    [Migration("20190211124544_MoreTabls")]
    partial class MoreTabls
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ClickNCheck.Models.Administrator", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("OrganisationID");

                    b.Property<int>("Password");

                    b.Property<int>("Phone");

                    b.Property<string>("Surname")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("Administrator");
                });

            modelBuilder.Entity("ClickNCheck.Models.Checks", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("OrganisationID");

                    b.HasKey("ID");

                    b.ToTable("Checks");
                });

            modelBuilder.Entity("ClickNCheck.Models.JobProfile", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("OrganisationID");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("JobProfile");
                });

            modelBuilder.Entity("ClickNCheck.Models.Organisation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("Organisation");
                });

            modelBuilder.Entity("ClickNCheck.Models.Recruiter", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("OrganisationID");

                    b.Property<int>("Password");

                    b.Property<int>("Phone");

                    b.Property<string>("Surname")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("Recruiter");
                });

            modelBuilder.Entity("ClickNCheck.Models.Recruiter_JobProfile", b =>
                {
                    b.Property<int>("RecruiterId");

                    b.Property<int>("JobProfileId");

                    b.HasKey("RecruiterId", "JobProfileId");

                    b.HasIndex("JobProfileId");

                    b.ToTable("Recruiter_JobProfile");
                });

            modelBuilder.Entity("ClickNCheck.Models.Recruiter_JobProfile", b =>
                {
                    b.HasOne("ClickNCheck.Models.JobProfile", "JobProfile")
                        .WithMany("Recruiter_JobProfile")
                        .HasForeignKey("JobProfileId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ClickNCheck.Models.Recruiter", "Recruiter")
                        .WithMany("Recruiter_JobProfile")
                        .HasForeignKey("RecruiterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
